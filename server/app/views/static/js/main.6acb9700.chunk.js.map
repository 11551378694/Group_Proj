{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/table.jsx","components/board-user.component.js","components/board-admin.component.js","components/admin-location-create.component.js","components/admin-user-retrieve.component.js","components/admin-user-update.component.js","components/admin-user-delete.component.js","components/admin-location-retrieve.component.js","components/admin-location-update.component.js","components/admin-location-delete.component.js","components/chart.component.js","components/singleplace.jsx","components/place-detail.jsx","components/user-comment.jsx","components/place-operation.jsx","components/Map.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","vusername","vpassword","Register","handleRegister","successful","register","authHeader","user","get","headers","Home","content","UserService","getPublicContent","Profile","currentUser","getCurrentUser","substring","substr","id","roles","map","index","mapboxgl","Table","places","sortkey","order","searchKey","undefined","searchField","handleOrderChange","handleFieldChange","handleClick","handleSearch","fetch","res","json","placesList","event","console","log","placeList","longitude","latitude","locationId","changePlace","handleSearchFieldChange","placeholder","handleSearchKeyChange","onClick","place","to","React","BoardUser","getUserBoard","BoardAdmin","getAdminBoard","method","text","alert","handleCRUDButtonSubmit","url","body","document","querySelector","innerHTML","AdminLocationCreate","class","for","inputList","includes","AdminUserRetrieve","AdminUserUpdate","AdminUserDelete","AdminLocationRetrieve","AdminLocationUpdate","AdminLocationDelete","ch","registerables","Chart","start_list","valid_list","tempHtml","tempList","selectedIndex","i","a","input_type","checked","LOCATION_ID","DESTINATION_ID","timeToString","thee","flag","ur","getFullYear","getMonth","getDate","getHours","getMinutes","tit","label_list","data_list","now_date","Date","j","getTime","str","DOMParser","parseFromString","querySelectorAll","k","textContent","nextElementSibling","unshift","parseInt","catch","NaN","get_data","arr","ctx","getElementById","labels","datasets","label","fill","borderColor","tension","options","interaction","intersect","scales","y","suggestedMin","suggestedMax","title","x","workerClass","MapboxWorker","Singleplace","lng","lat","zoom","mapContainer","createRef","Map","container","center","attributionControl","on","getCenter","toFixed","getZoom","popUpMessage","Popup","setHTML","Marker","setLngLat","setPopup","addTo","el","height","PlaceDetails","placeInfo","getDataFromPastHours","fetchData","processData","formattedData","destinationInformation","destinationID","journeyData","count","captureDate","colorID","colorId","timeString","getElementsByTagName","childNodes","locationID","journeyType","Number","err","hours","timeNow","timeNowInExactMins","loopCounter","month","counter","timeInExactMins","split","timeInSixDigits","result","destination","usefulData","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","captionSide","UserComment","comments","newComment","handleTextAreaChange","postCommentToDB","forEach","comment","tmpStinrg","date","showAdminBoard","newData","setTimeout","rows","width","PlaceOperation","placeId","placeLat","placeLng","placeName","exact","path","MapBox","source","features","loc","feature","properties","description","geometry","coordinates","addSource","addLayer","layout","slice","innerHtmlContent","divElement","createElement","assignBtn","appendChild","addEventListener","Math","abs","lngLat","setDOMContent","nav","NavigationControl","addControl","App","logOut","logout","href","component","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6acb9700.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    // for Node.js Express back-end\n    return { 'x-access-token': user.accessToken };\n  } else {\n    return {};\n  }\n}","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8080/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h4>Journey time indicators</h4>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: AuthService.getCurrentUser()\n    };\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong>{\" \"}\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.id}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport {BrowserRouter as Router, Link, Route, Switch, useRouteMatch, useParams, useLocation} from \"react-router-dom\";//can be found in external library: ReactDOM\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\nimport SearchIcon from '@material-ui/icons/Search';\nmapboxgl.accessToken = 'pk.eyJ1IjoibGV1bmczMDEiLCJhIjoiY2tvNnl2dHppMHJxbDJxcXdteTRvNnU3ZyJ9.HVslWQ3-PqqIw-ReK2hUsQ';\n\nexport default class Table extends React.Component{\n        constructor(props){\n                super(props);\n                this.state = {places:[],sortkey:\"locationId\",order:\"1\",searchKey:undefined,searchField:\"locationId\"};\n\t\tthis.handleOrderChange = this.handleOrderChange.bind(this);\n\t\tthis.handleFieldChange = this.handleFieldChange.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n                this.handleSearch = this.handleSearch.bind(this);\n        }\n\n        componentDidMount(){\n                fetch(\"http://csci2720-g74.cse.cuhk.edu.hk/getplaces/\"+this.state.sortkey+\"/\"+this.state.order)\n                .then(res=>res.json())\n                .then(placesList =>{\n                        this.setState({places:placesList});\n                });\n        }\n\n        handleSearchKeyChange(event)\n        {\n                this.setState({searchKey:event.target.value});\n                \n                \n        }\n\n        handleSearchFieldChange(event)\n        {\n                this.setState({searchField:event.target.value});\n                \n        }\n\n\thandleSearch(event){\n                console.log(this.state.searchKey);\n                console.log(this.state.searchField);\n\t\tevent.preventDefault();\n                fetch('http://csci2720-g74.cse.cuhk.edu.hk/displaysearchresultintable/'+this.state.searchField+\"/\"+this.state.searchKey)\n                .then(res=>res.json())\n                .then(placeList =>{\n                        this.setState({places:placeList});\n                });\n\t}\n\n\n\thandleFieldChange(event){\n\t\tthis.setState({sortkey:event.target.value});\n\t\tfetch(\"http://csci2720-g74.cse.cuhk.edu.hk/getplaces/\"+event.target.value+\"/\"+this.state.order)\n                .then(res=>res.json())\n                .then(placesList =>{\n                        this.setState({places:placesList});\n                });\n\t}\n\thandleOrderChange(event){\n\t\tthis.setState({order:event.target.value});\n\t\tfetch(\"http://csci2720-g74.cse.cuhk.edu.hk/getplaces/\"+this.state.sortkey+\"/\"+event.target.value)\n                .then(res=>res.json())\n                .then(placesList =>{\n                        this.setState({places:placesList});\n                });\n\t}\n\thandleClick(longitude,latitude,name,locationId){\n\t\tthis.props.changePlace(locationId,latitude,longitude,name);\n\t}\n\n\n\n\n        render(){\n\n\n        return(\n                <>\n                <div className=\"container\">\n\n                        <form>\n                                <div>Select field to Search: &nbsp;&nbsp;\n                                <select onChange={event=>{this.handleSearchFieldChange(event)}}>\n                                        <option value=\"locationId\">Location ID</option>\n                                        <option value=\"name\">Name</option>\n                                        <option value=\"latitude\">Latitude</option>\n                                        <option value=\"longitude\">Longitude</option>\n                                </select>\n                                </div>\n                                <input type=\"search\" className=\"input-text-box\"placeholder=\"Enter keyword\" onChange={event=>{this.handleSearchKeyChange(event)}}/>\n                                <button type=\"button\" className=\"input-text-button\" onClick={event=>{this.handleSearch(event)}}><SearchIcon /></button>\n                        </form>\n\t\t\t<label className=\"d-inline\">\n\t\t\t\tSort the places according to:&nbsp;&nbsp;\n\t\t\t<select value={this.state.sortkey}  onChange={this.handleFieldChange}>\n\t\t\t\t<option value=\"locationId\">Location ID</option>\n\t\t\t\t<option value=\"name\">Name</option>\n\t\t\t\t<option value=\"latitude\">Latitude</option>\n\t\t\t\t<option value=\"longitude\">Longitude</option>\n\t\t\t</select>\n\t\t\t</label >\n\t\t\n\t\t\t<label className=\"d-inline\">\n                        &nbsp;&nbsp;in &nbsp;&nbsp;\n\t\t\t<select value={this.state.order} onChange={this.handleOrderChange}>\n\t\t\t\t<option value=\"1\">ascending</option>\n\t\t\t\t<option value=\"-1\">descending</option>\n\t\t\t</select>\n\t\t\t\torder\n\t\t\t</label>\n\n\t\t\t\n                        <table>\n                        <thead>\n                                <tr>\n                                        <th>sort</th>\n                                        <th>locationID</th>\n                                        <th>name</th>\n                                        <th>latitude</th>\n                                        <th>longitude</th>\n                                </tr>\n                        </thead>\n                        <tbody>\n                                \n                                {this.state.places.map((place,index) =>(\n                                        <tr key={index}>\n                                                <th>{index}</th>\n                                                <td>{place.locationId}</td>\n                                                <td><Link to=\"/singleplaceview\" onClick={()=>this.handleClick(place.longitude,place.latitude,place.name,place.locationId)}>{place.name}</Link></td>\n                                                <td>{place.latitude}</td>\n                                                <td>{place.longitude}</td>\n                                        </tr>\n                                        ))\n                                }\n                                \n                        </tbody>\n                        </table>\n\t\t\n                </div>\n                </>\n                );\n        }\n}\n\n\n\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\nimport Table from \"./table\"\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <p>User CRUD</p>\n          <ul>\n            <li><Link to=\"/register\">Create User</Link></li>\n            <li><Link to=\"/admin/user/retrieve\">Retrieve username</Link></li>\n            <li><Link to=\"/admin/user/update\">Update user</Link></li>\n            <li><Link to=\"/admin/user/delete\">Delete user</Link></li>\n          </ul>\n          <p>Place CRUD</p>\n          <ul>\n            <li><Link to=\"/admin/location/create\">Create Place</Link></li>\n            <li><Link to=\"/admin/location/retrieve\">Retrieve place</Link></li>\n            <li><Link to=\"/admin/location/update\">Update place</Link></li>\n            <li><Link to=\"/admin/location/delete\">Delete place</Link></li>\n          </ul>\n        </header>\n        <button onClick={() => {\n          fetch(\"http://localhost:8080/admin/api/location/refresh\", {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n          }).then(response =>\n            response.text()\n          ).then(response => {\n            alert(response)\n          })\n        }}>Refresh Data</button>\n      </div >\n    );\n  }\n}","import React, { Component } from \"react\";\r\n\r\nexport const handleCRUDButtonSubmit = (url, data) => {\r\n    fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data),\r\n    }).then(response =>\r\n        response.text()\r\n    ).then(response => {\r\n        document.querySelector(\"#result\").innerHTML = response\r\n    })\r\n}\r\n\r\nexport default class AdminLocationCreate extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"form\" class=\"event\">\r\n                    <label for=\"locationId\">locationId: </label>\r\n                    <input name='locationId' id=\"locationId\" />\r\n                    <br />\r\n                    <label for=\"latitude\">latitude: </label>\r\n                    <input name='latitude' id=\"latitude\" />\r\n                    <br />\r\n                    <label for=\"longitude\">longitude: </label>\r\n                    <input name='longitude' id=\"longitude\" />\r\n                    <br />\r\n                    <label for=\"name\">name: </label>\r\n                    <input name='name' id=\"name\" />\r\n                    <br />\r\n                    <button onClick={() => {\r\n                        let inputList = [document.querySelector(\"#locationId\").value, document.querySelector(\"#latitude\").value, document.querySelector(\"#longitude\").value, document.querySelector(\"#name\").value]\r\n                        if (inputList.includes(\"\")) {\r\n                            document.querySelector(\"#result\").innerHTML = \"Invalid Input. Try again.\"\r\n                        } else {\r\n                            handleCRUDButtonSubmit(\"http://localhost:8080/admin/api/location/create\", {\r\n                                \"locationId\": inputList[0],\r\n                                \"latitude\": inputList[1],\r\n                                \"longitude\": inputList[2],\r\n                                \"name\": inputList[3],\r\n                            })\r\n                        }\r\n                    }}>Submit</button>\r\n                </div>\r\n                <div id=\"result\">\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { handleCRUDButtonSubmit } from './admin-location-create.component'\r\n\r\nexport default class AdminUserRetrieve extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"form\" class=\"event\">\r\n                    <label for=\"userId\">userId: </label>\r\n                    <input name='userId' id=\"userId\" />\r\n                    <br />\r\n                    <button onClick={() => {\r\n                        let inputList = [document.querySelector(\"#userId\").value]\r\n                        if (inputList.includes(\"\")) {\r\n                            document.querySelector(\"#result\").innerHTML = \"Invalid Input. Try again.\"\r\n                        } else {\r\n                            handleCRUDButtonSubmit(\"http://localhost:8080/admin/api/user/retrieve\", {\r\n                                \"userId\": inputList[0],\r\n                            })\r\n                        }\r\n                    }}>Submit</button>\r\n                </div>\r\n                <div id=\"result\">\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { handleCRUDButtonSubmit } from './admin-location-create.component'\r\n\r\nexport default class AdminUserUpdate extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"form\" class=\"event\">\r\n                    <p>Please don't leave blank in any input fields!!</p>\r\n                    <label for=\"userId\">userId: </label>\r\n                    <input name='userId' id='userId' />\r\n                    <br />\r\n                    <label for=\"username\">username: </label>\r\n                    <input name='username' id='username' />\r\n                    <br />\r\n                    <label for=\"password\">password: </label>\r\n                    <input name='password' id='password' />\r\n                    <br />\r\n                    <button onClick={() => {\r\n                        let inputList = [document.querySelector(\"#userId\").value, document.querySelector(\"#username\").value, document.querySelector(\"#password\").value]\r\n                        if (inputList[0] === \"\") {\r\n                            document.querySelector(\"#result\").innerHTML = \"Invalid Input. Try again.\"\r\n                        } else {\r\n                            handleCRUDButtonSubmit(\"http://localhost:8080/admin/api/user/update\", {\r\n                                \"userId\": inputList[0],\r\n                                \"username\": inputList[1],\r\n                                \"password\": inputList[2],\r\n                            })\r\n                        }\r\n                    }}>Submit</button>\r\n                </div>\r\n                <div id=\"result\">\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { handleCRUDButtonSubmit } from './admin-location-create.component'\r\n\r\nexport default class AdminUserDelete extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"form\" class=\"event\">\r\n                    <label for=\"userId\">userId: </label>\r\n                    <input name='userId' id=\"userId\" />\r\n                    <br />\r\n                    <button onClick={() => {\r\n                        let inputList = [document.querySelector(\"#userId\").value]\r\n                        if (inputList.includes(\"\")) {\r\n                            document.querySelector(\"#result\").innerHTML = \"Invalid Input. Try again.\"\r\n                        } else {\r\n                            handleCRUDButtonSubmit(\"http://localhost:8080/admin/api/user/delete\", {\r\n                                \"userId\": inputList[0]\r\n                            })\r\n                        }\r\n                    }}>Submit</button>\r\n                </div>\r\n                <div id=\"result\">\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { handleCRUDButtonSubmit } from './admin-location-create.component'\r\n\r\nexport default class AdminLocationRetrieve extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"form\" class=\"event\">\r\n                    <label for=\"locationId\">locationId: </label>\r\n                    <input name='locationId' id=\"locationId\" />\r\n                    <br />\r\n                    <button onClick={() => {\r\n                        let inputList = [document.querySelector(\"#locationId\").value]\r\n                        if (inputList.includes(\"\")) {\r\n                            document.querySelector(\"#result\").innerHTML = \"Invalid Input. Try again.\"\r\n                        } else {\r\n                            handleCRUDButtonSubmit(\"http://localhost:8080/admin/api/location/retrieve\", {\r\n                                \"locationId\": inputList[0]\r\n                            })\r\n                        }\r\n                    }}>Submit</button>\r\n                </div>\r\n                <div id=\"result\">\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { handleCRUDButtonSubmit } from './admin-location-create.component'\r\n\r\nexport default class AdminLocationUpdate extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"form\" class=\"event\">\r\n                    <label for=\"locationId\">locationId: </label>\r\n                    <input name='locationId' id=\"locationId\" />\r\n                    <br />\r\n                    <label for=\"latitude\">latitude: </label>\r\n                    <input name='latitude' id=\"latitude\" />\r\n                    <br />\r\n                    <label for=\"longitude\">longitude: </label>\r\n                    <input name='longitude' id=\"longitude\" />\r\n                    <br />\r\n                    <label for=\"name\">name: </label>\r\n                    <input name='name' id=\"name\" />\r\n                    <br />\r\n                    <button onClick={() => {\r\n                        let inputList = [document.querySelector(\"#locationId\").value, document.querySelector(\"#latitude\").value, document.querySelector(\"#longitude\").value, document.querySelector(\"#name\").value]\r\n                        if (inputList[0] === \"\") {\r\n                            document.querySelector(\"#result\").innerHTML = \"Invalid Input. Try again.\"\r\n                        } else {\r\n                            handleCRUDButtonSubmit(\"http://localhost:8080/admin/api/location/update\", {\r\n                                \"locationId\": inputList[0],\r\n                                \"latitude\": inputList[1],\r\n                                \"longitude\": inputList[2],\r\n                                \"name\": inputList[3],\r\n                            })\r\n                        }\r\n                    }}>Submit</button>\r\n                </div>\r\n                <div id=\"result\">\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { handleCRUDButtonSubmit } from './admin-location-create.component'\r\n\r\nexport default class AdminLocationDelete extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div id=\"form\" class=\"event\">\r\n                    <label for=\"locationId\">locationId: </label>\r\n                    <input name='locationId' id=\"locationId\" />\r\n                    <br />\r\n                    <button onClick={() => {\r\n                        let inputList = [document.querySelector(\"#locationId\").value]\r\n                        if (inputList.includes(\"\")) {\r\n                            document.querySelector(\"#result\").innerHTML = \"Invalid Input. Try again.\"\r\n                        } else {\r\n                            handleCRUDButtonSubmit(\"http://localhost:8080/admin/api/location/delete\", {\r\n                                \"locationId\": inputList[0]\r\n                            })\r\n                        }\r\n                    }}>Submit</button>\r\n                </div>\r\n                <div id=\"result\">\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Chart as ch, registerables } from 'chart.js';\r\nch.register(...registerables);\r\n\r\nconst Chart = () => {\r\n    let start_list = [\"H1\", \"H2\", \"H3\", \"H11\", \"K01\", \"K02\", \"K03\", \"K04\", \"K05\", \"K06\", \"SJ1\", \"SJ2\", \"SJ3\", \"SJ4\", \"SJ5\"]\r\n    //let end_list = [\"CH\", \"EH\", \"WH\", \"LRT\", \"SMT\", \"TCT\", \"TKTL\", \"TKTM\", \"TSCA\", \"TWCP\", \"TWTM\"]\r\n    let valid_list = {\r\n        \"H11\": [\"CH\", \"EH\"],\r\n        \"H1\": [\"CH\", \"EH\"],\r\n        \"H2\": [\"CH\", \"EH\", \"WH\"],\r\n        \"H3\": [\"CH\", \"WH\"],\r\n        \"K01\": [\"CH\", \"WH\"],\r\n        \"K02\": [\"CH\", \"EH\"],\r\n        \"K03\": [\"CH\", \"EH\", \"WH\"],\r\n        \"K04\": [\"CH\", \"WH\"],\r\n        \"K05\": [\"CH\", \"EH\"],\r\n        \"K06\": [\"CH\", \"WH\"],\r\n        \"SJ1\": [\"LRT\", \"SMT\", \"TSCA\"],\r\n        \"SJ2\": [\"LRT\", \"TCT\", \"SJ2\", \"TSCA\"],\r\n        \"SJ3\": [\"LRT\", \"TCT\", \"TSCA\"],\r\n        \"SJ4\": [\"TKTL\", \"TKTM\"],\r\n        \"SJ5\": [\"TWCP\", \"TWTM\"]\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <label for=\"LOCATION_ID\">LOCATION ID: </label>\r\n            <select name=\"LOCATION_ID\" id=\"input_LOCATION_ID\"\r\n                onChange={() => {\r\n                    let tempHtml = \"\";\r\n                    let tempList = valid_list[start_list[document.querySelector(\"#input_LOCATION_ID\").selectedIndex]];\r\n                    for (let i = 0; i < tempList.length; i++) {\r\n                        tempHtml = tempHtml + '<option value=\"' + tempList[i] + '\" >' + tempList[i] + '</option>'\r\n                    }\r\n                    document.querySelector(\"#input_DESTINATION_ID\").innerHTML = tempHtml;\r\n                }}>\r\n                {start_list.map((value, index) => {\r\n                    return (<option value={value} key={index}>{value}</option>)\r\n                })}\r\n            </select>\r\n            <label for=\"DESTINATION_ID\">DESTINATION ID: </label>\r\n            <select name=\"DESTINATION_ID\" id=\"input_DESTINATION_ID\">\r\n                {valid_list[\"H11\"].map((value, index) => {\r\n                    return (<option value=\"value\" key={index}>{value}</option>)\r\n                })}\r\n            </select>\r\n            <br />\r\n            <input type=\"radio\" id=\"input_type_0\" name=\"input_type\" value=\"0\" />\r\n            {\"Waiting time in the past 10 hours\"}\r\n            <br />\r\n            <input type=\"radio\" id=\"input_type_1\" name=\"input_type\" value=\"1\" />\r\n            {\"Waiting time in this hour of past 7 days\"}\r\n            <br />\r\n            <button type=\"button\" id=\"check\" onClick={async () => {\r\n                let input_type = -1;\r\n                if (document.querySelector(\"#input_type_0\").checked) {\r\n                    input_type = 0\r\n                } else if (document.querySelector(\"#input_type_1\").checked) {\r\n                    input_type = 1\r\n                }\r\n                let LOCATION_ID = start_list[document.querySelector(\"#input_LOCATION_ID\").selectedIndex]\r\n                let DESTINATION_ID = valid_list[start_list[document.querySelector(\"#input_LOCATION_ID\").selectedIndex]][document.querySelector(\"#input_DESTINATION_ID\").selectedIndex]\r\n                if (input_type !== -1) {\r\n                    const timeToString = (thee, flag = true) => {\r\n                        let ur = \"\" + thee.getFullYear()\r\n                        if (!flag) {\r\n                            ur = ur + \"/\"\r\n                        }\r\n                        ur = ur + (\"\" + ((thee.getMonth() + 1) < 10 ? (\"0\" + (thee.getMonth() + 1)) : (\"\" + (thee.getMonth() + 1))))\r\n                        if (!flag) {\r\n                            ur = ur + \"/\"\r\n                        }\r\n                        ur = ur + (\"\" + thee.getDate() < 10 ? (\"0\" + thee.getDate()) : (\"\" + thee.getDate()))\r\n                        ur = ur + \"-\"\r\n                        ur = ur + (\"\" + thee.getHours() < 10 ? (\"0\" + thee.getHours()) : (\"\" + thee.getHours()))\r\n                        if (!flag) {\r\n                            ur = ur + \":\"\r\n                        }\r\n                        ur = ur + (\"\" + thee.getMinutes() < 10 ? (\"0\" + thee.getMinutes()) : (\"\" + thee.getMinutes()))\r\n                        return ur;\r\n                    }\r\n\r\n                    const get_data = async (input_type) => {\r\n                        document.querySelector(\"#result\").innerHTML = \"Loading\"\r\n                        const label_list = []\r\n                        const data_list = []\r\n                        let now_date = new Date()\r\n                        let ur = \"https://api.data.gov.hk/v1/historical-archive/get-file?url=https%3A%2F%2Fresource.data.one.gov.hk%2Ftd%2Fjourneytime.xml&time=\"\r\n                        if (input_type === 0) {\r\n                            for (let i = 0; i < 10; i++) {\r\n                                for (let j = 0; j < (i === 9 ? 5 : 4); j++) {\r\n                                    let thee = new Date((now_date.getTime()) - 60 * 1000 * 60 * i - 60 * 1000 * 15 * j)\r\n                                    await fetch(ur + timeToString(thee, true))\r\n                                        .then(response => response.text())\r\n                                        .then(str => (new window.DOMParser()).parseFromString(str, \"text/xml\"))\r\n                                        .then(data => {\r\n                                            let a = data.querySelectorAll(\"jtis_journey_list LOCATION_ID\")\r\n                                            for (let k = 0; k < a.length; k++) {\r\n                                                if (a[k].textContent === LOCATION_ID && a[k].nextElementSibling.textContent === DESTINATION_ID) {\r\n                                                    if (a[k].nextElementSibling.nextElementSibling.nextElementSibling.textContent === \"1\") {\r\n                                                        data_list.unshift(parseInt(a[k].nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.textContent))\r\n                                                        label_list.unshift(timeToString(thee, false))\r\n                                                        break;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }).catch(() => { })\r\n                                }\r\n                            }\r\n                        } else {\r\n                            for (let i = 0; i < 7; i++) {\r\n                                for (let j = 0; j < 5; j++) {\r\n                                    let thee = new Date((now_date.getTime()) - 60 * 1000 * 60 * 24 * i - 60 * 1000 * 15 * j)\r\n                                    await fetch(ur + timeToString(thee, true))\r\n                                        .then(response => response.text())\r\n                                        .then(str => (new window.DOMParser()).parseFromString(str, \"text/xml\"))\r\n                                        .then(data => {\r\n                                            let a = data.querySelectorAll(\"jtis_journey_list LOCATION_ID\")\r\n                                            for (let k = 0; k < a.length; k++) {\r\n                                                if (a[k].textContent === LOCATION_ID && a[k].nextElementSibling.textContent === DESTINATION_ID) {\r\n                                                    if (a[k].nextElementSibling.nextElementSibling.nextElementSibling.textContent === \"1\") {\r\n                                                        data_list.unshift(parseInt(a[k].nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.textContent))\r\n                                                        label_list.unshift(timeToString(thee, false))\r\n                                                        break;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }).catch(() => { })\r\n                                    if ((i < 6) && j === 4) {\r\n                                        data_list.unshift(NaN)\r\n                                        label_list.unshift(\"\")\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        return ([label_list, data_list])\r\n                    }\r\n                    let tit = input_type === 0 ? 'Waiting time in the past 10 hours' : \"Waiting time in this hour of past 7 days\"\r\n                    get_data(input_type).then((arr) => {\r\n                        document.querySelector(\"#result\").innerHTML = '<canvas id=\"myChart\" width=\"400\" height=\"200\"></canvas>'\r\n                        let ctx = document.getElementById('myChart');\r\n                        new ch(ctx, {\r\n                            type: 'line',\r\n                            data: {\r\n                                labels: arr[0],\r\n                                datasets: [{\r\n                                    label: tit,\r\n                                    data: arr[1],\r\n                                    fill: false,\r\n                                    borderColor: 'rgb(75, 192, 192)',\r\n                                    tension: 0\r\n                                }]\r\n                            },\r\n                            options: {\r\n                                interaction: {\r\n                                    intersect: false,\r\n                                },\r\n                                scales: {\r\n                                    y: {\r\n                                        suggestedMin: 5,\r\n                                        suggestedMax: 30,\r\n                                        title: {\r\n                                            display: true,\r\n                                            text: 'Waiting time (in mins)'\r\n                                        },\r\n                                    },\r\n                                    x: {\r\n                                        title: {\r\n                                            display: true,\r\n                                            text: 'Time'\r\n                                        },\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    })\r\n                } else {\r\n                    document.querySelector(\"#result\").innerHTML = \"Wrong input\"\r\n                }\r\n            }}>Check!</button>\r\n            <div id=\"result\">\r\n\r\n            </div >\r\n        </div >\r\n    );\r\n}\r\nexport default Chart;","import React, { Component } from \"react\";\nimport {BrowserRouter as Router, Link, Route, Switch, useRouteMatch, useParams, useLocation} from \"react-router-dom\";\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\n\nmapboxgl.workerClass = MapboxWorker;\nmapboxgl.accessToken = 'pk.eyJ1IjoibGV1bmczMDEiLCJhIjoiY2tvNnl2dHppMHJxbDJxcXdteTRvNnU3ZyJ9.HVslWQ3-PqqIw-ReK2hUsQ';\n\n\nexport default class Singleplace extends React.Component{\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlng: this.props.lng,\n\t\t\tlat: this.props.lat,\n\t\t\tzoom: 14\n\t\t};\n\t\tthis.mapContainer = React.createRef();\n\t}\t\n\n\tcomponentDidMount() {\n\tconst { lng, lat, zoom } = this.state;\n\tconst map = new mapboxgl.Map({\n\t\tcontainer: this.mapContainer,\n\t\tstyle: 'mapbox://styles/mapbox/streets-v11',\n\t\tcenter: [lng, lat],\n\t\tzoom: zoom,\n\t\tattributionControl :false\n\t\t});\n\t\t\n\t\tmap.on('move', () => {\n\t\t\tthis.setState({\n\t\t\t\tlng: map.getCenter().lng.toFixed(4),\n\t\t\t\tlat: map.getCenter().lat.toFixed(4),\n\t\t\t\tzoom: map.getZoom().toFixed(2)\n\t\t\t});\n\t\t});\n\t\tvar popUpMessage = new mapboxgl.Popup().setHTML(\"<h6>\"+this.props.name+\"</h6>\");\n\t\tvar marker = new mapboxgl.Marker()\n\t\t.setLngLat([lng,lat])\n\t\t.setPopup(popUpMessage)\n\t\t.addTo(map);\n\t}\n\t\t\n\n\trender()\n\t{\n\t\tconst { lng, lat, zoom } = this.state;\n\t\treturn(\n\t\t\t<>\n\t\t\t<div className=\"sidebar\">\n\t\t\t\tLongitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div ref={el => this.mapContainer = el} className=\"map-container\" style={{height:\"50vh\"}} />\n\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\t\t\t</>\n\t\t);\n\t}\n}\n","import React from \"react\";\r\n\r\nexport default class PlaceDetails extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            lng: this.props.lng,\r\n\t\t\tlat: this.props.lat,\r\n            name: this.props.name,\r\n            locationId : this.props.locationId,\r\n            placeInfo : []\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        \r\n        async function getDataFromPastHours(hours, locationId){\r\n            let timeNow = new Date().getTime();\r\n            let timeNowInExactMins = timeNow - timeNow%60000;\r\n            let loopCounter = hours * 60;\r\n            let month = {\"January\":\"01\",\"February\":\"02\",\"March\":\"03\",\"April\":\"04\",\"May\":\"05\",\"June\":\"06\",\r\n                  \"July\":\"07\",\"August\":\"08\",\"September\":\"09\",\"October\":\"10\",\"November\":\"11\",\"December\":\"12\"};\r\n            let formattedData = []; // store the data in the readable format fetched from the api \r\n            //convert the raw data into readable format\r\n            for (let counter = 0 ;counter < loopCounter; counter+=2){\r\n              let timeInExactMins = new Date(timeNowInExactMins - counter*60000).toString().split(\" \");\r\n              let timeInSixDigits = timeInExactMins[4].split(\":\");\r\n              let timeString = timeInExactMins[3]+month[timeInExactMins[1]]+timeInExactMins[2]+\"-\"+timeInSixDigits[0]+timeInSixDigits[1];\r\n              await fetchData(formattedData,locationId,timeString);\r\n                \r\n            }\r\n             let result  = processData(formattedData);\r\n              return result;\r\n        }\r\n        async function fetchData(formattedData,locationId,timeString){\r\n            let historicalPath = 'https://api.data.gov.hk/v1/historical-archive/get-file?url=https%3A%2F%2Fresource.data.one.gov.hk%2Ftd%2Fjourneytime.xml&time='+timeString;\r\n            await fetch('https://resource.data.one.gov.hk/td/journeytime.xml')\r\n            .then(res=>res.text())\r\n            .then(data => {\r\n                let parser = new DOMParser();\r\n                let xml = parser.parseFromString(data,'text/xml');\r\n                let places = xml.getElementsByTagName('jtis_journey_time');\r\n                \r\n                \r\n                for (let i=0;i<places.length;i++){\r\n                  if(places[i].childNodes[1].childNodes[0].data == locationId && places[i].childNodes[7].childNodes[0].data == \"1\"){\r\n                        formattedData.push({\r\n                                locationID: places[i].childNodes[1].childNodes[0].data,\r\n                                destinationID: places[i].childNodes[3].childNodes[0].data,\r\n                                captureDate: places[i].childNodes[5].childNodes[0].data,\r\n                                journeyType: places[i].childNodes[7].childNodes[0].data,\r\n                                journeyData: Number(places[i].childNodes[9].childNodes[0].data),\r\n                                colorID: places[i].childNodes[11].childNodes[0].data\r\n\r\n                        });\r\n                      }\r\n                }\r\n                \r\n          })\r\n          .catch(err=>{console.log('there is no data at '+timeString )});\r\n\r\n}\r\n\r\n\r\n\r\n    async function processData(formattedData){\r\n        let destinationInformation = { \r\n        \"CH\" : { \"id\":\"CH\",\"name\": \"Cross Harbour Tunnel\" , \"journeyData\":0 , \"colorId\":0, \"count\":0,\"captureDate\":\"\"},\r\n        \"EH\" : { \"id\":\"EH\",\"name\" : \"Eastern Harbour Crossing \" , \"journeyData\":0 , \"colorId\":0, \"count\":0,\"captureDate\":\"\"},\r\n        \"WH\" : { \"id\":\"WH\",\"name\" :\"Western Harbour Crossing\" , \"journeyData\":0 , \"colorId\":0, \"count\":0,\"captureDate\":\"\"},\r\n        \"LRT\" : { \"id\":\"LRT\",\"name\" : \"Lion Rock Tunnel\" , \"journeyData\":0 , \"colorId\":0, \"count\":0,\"captureDate\":\"\"},\r\n        \"SMT\" : { \"id\":\"SMT\",\"name\" :\"Shing Mun Tunnel\" , \"journeyData\":0 , \"colorId\":0, \"count\":0,\"captureDate\":\"\"},\r\n        \"TCT\" : { \"id\":\"TCT\",\"name\" :\"Tate\\'s Cairn Tunnel\" , \"journeyData\":0 , \"colorId\":0, \"count\":0,\"captureDate\":\"\"},\r\n        \"TKTL\" :{  \"id\":\"TKTL\",\"name\" :\"Ting Kau, via Tai Lam Tunnel\" , \"journeyData\":0 , \"colorId\":0, \"count\":0,\"captureDate\":\"\"}, \r\n        \"TKTM\" : { \"id\":\"TKTM\",\"name\" :\"Ting Kau, via Tuen Mun Road\" , \"journeyData\":0 , \"colorId\":0, \"count\":0,\"captureDate\":\"\"}, \r\n        \"TSCA\" : { \"id\":\"TSCA\",\"name\" :\"Tsing Sha Control Area\" , \"journeyData\":0 , \"colorId\":0, \"count\":0,\"captureDate\":\"\"}, \r\n        \"TWCP\" : { \"id\":\"TWCP\",\"name\" :\"Tsuen Wan via Castle Peak\" , \"journeyData\":0 , \"colorId\":0, \"count\":0,\"captureDate\":\"\"}, \r\n        \"TWTM\" : { \"id\":\"TWTM\",\"name\" :\"Tsuen Wan via Tuen Mun\" , \"journeyData\":0 , \"colorId\":0, \"count\":0,\"captureDate\":\"\"},\r\n    }\r\n\r\n   for (let i=0;i<formattedData.length;i++){\r\n     let id = formattedData[i].destinationID;\r\n     destinationInformation[id].journeyData += formattedData[i].journeyData;\r\n     destinationInformation[id].count += 1;\r\n     destinationInformation[id].captureDate = formattedData[i].captureDate;\r\n     console.log(formattedData[i].colorID)\r\n     destinationInformation[id].colorId = formattedData[i].colorID;\r\n     console.log(destinationInformation[id].colorId)\r\n     \r\n     \r\n   }\r\n\r\n   return destinationInformation;\r\n}\r\n    let data = await getDataFromPastHours(0.02,this.state.locationId);\r\n    let usefulData = [];\r\n    for (let destination in data){\r\n        if(data[destination].count >=1)\r\n            {\r\n                \r\n                usefulData.push(data[destination]);\r\n            }\r\n    }\r\n    this.setState({placeInfo:usefulData});\r\n   \r\n    \r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#placedetails\" aria-expanded=\"false\" aria-controls=\"placedetails\">\r\n            {this.state.name}\r\n            </button>\r\n            <div class=\"collapse\" id=\"placedetails\">\r\n            <ul class=\"list-group\">\r\n                <li class=\"list-group-item\">locationID : {this.state.locationId}</li>\r\n                <li class=\"list-group-item\">Latitude : {this.state.lat}</li>\r\n                <li class=\"list-group-item\">Longitude : {this.state.lng}</li>\r\n                <li class=\"list-group-item\">\r\n                    <table>\r\n                    <caption style={{captionSide:\"top\"}}>Lastest Road Condition</caption>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>destinationID</th>\r\n                                <th>destination</th>\r\n                                <th>average waiting time</th>\r\n                                <th>traffic condition</th>\r\n                                <th>capture date</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.state.placeInfo.length==0 && <tr><th>loading</th><th>loading</th>\r\n                        <th>loading</th><th>loading</th><th>loading</th></tr>\r\n                        }\r\n                        {   \r\n                            this.state.placeInfo.map((destination,index)=>(\r\n                                <tr key={index}>\r\n                                <td>{destination.id}</td>\r\n                                <td>{destination.name}</td>\r\n                                <td>{destination.journeyData}</td>\r\n                                <td>{destination.colorId == \"1\" ? <span>&#128308;</span>: destination.colorId == \"2\" ? <span>&#128993;</span> : <span>&#128994;</span>}</td>\r\n                                <td>{destination.captureDate}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </li>\r\n            </ul>\r\n            </div>\r\n               \r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {BrowserRouter as Router, Link, Route, Switch, useRouteMatch, useParams, useLocation} from \"react-router-dom\";\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport KeyboardReturnIcon from '@material-ui/icons/KeyboardReturn';\r\nimport AuthService from \"../services/auth.service\";\r\nexport default class UserComment extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {locationId : this.props.locationId, comments : [], newComment:\"\",currentUser:\"guest\"};\r\n        this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\r\n        this.postCommentToDB = this.postCommentToDB.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('http://csci2720-g74.cse.cuhk.edu.hk/getusercomments/'+this.state.locationId)\r\n        .then(res=>res.json())\r\n        .then(comments => {\r\n            comments.forEach(comment => {\r\n                let tmpStinrg = comment.date.split(\"T\");\r\n                comment.date = tmpStinrg[0];\r\n            });\r\n            this.setState({\"comments\":comments});\r\n            \r\n            \r\n        });\r\n        let user = AuthService.getCurrentUser();\r\n        if(user){\r\n            this.setState({\r\n                currentUser: user.username,\r\n                showAdminBoard : user.roles.includes(\"ROLE_ADMIN\")\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    handleTextAreaChange(event){\r\n        this.setState({newComment:event.target.value});\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    postCommentToDB(){\r\n        let timeNow = new Date();\r\n        \r\n        let newData={\r\n            body : this.state.newComment,\r\n            username : this.state.currentUser,\r\n            date : timeNow\r\n        };\r\n    \r\n        fetch('http://csci2720-g74.cse.cuhk.edu.hk/postusercomments/'+this.state.locationId,{\r\n            method: \"POST\",\r\n            headers:{\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(newData)\r\n        }).then()\r\n        .catch(err=>{console.log(\"There is error : \"+err)});\r\n        setTimeout(()=>{\r\n            fetch('http://csci2720-g74.cse.cuhk.edu.hk/getusercomments/'+this.state.locationId)\r\n                    .then(res=>res.json())\r\n                    .then(comments => {\r\n                        comments.forEach(comment => {\r\n                            let tmpStinrg = comment.date.split(\"T\");\r\n                            comment.date = tmpStinrg[0];\r\n                        });\r\n            this.setState({\"comments\":comments});\r\n            });\r\n        },500);\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"card\">\r\n                    <h5 className=\"card-header comment-header\"><CommentIcon />&nbsp; Recent Comments</h5>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        {\r\n                            this.state.comments.map((comment,index)=>(\r\n                                <li className=\"list-group-item\" key={index}>\r\n                                    <p className=\"comment-content\">\r\n                                        {comment.body}\r\n                                    </p>\r\n                                    <p className=\"comment-subscript\">By &nbsp; \r\n                                    <span className=\"comment-username\">{comment.username}</span>\r\n                                    &nbsp; on\r\n                                    <span className=\"text-muted\"> {comment.date}</span>&nbsp; \r\n                                    \r\n                                </p>\r\n                                </li>\r\n                            ))\r\n                        }\r\n                        <li className=\"list-group-item\">\r\n                        <textarea className=\"input-text-box\" placeholder=\"Leave your comment...\" id=\"newComment\" rows=\"2\" style={{width:\"50vw\"}} onChange={event=>this.handleTextAreaChange(event)}/>\r\n                        &nbsp;&nbsp;\r\n                        <button type=\"button\" className=\"input-text-button\" onClick={this.postCommentToDB}><KeyboardReturnIcon /></button> \r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <Link to=\"/table\"><ArrowBackIosIcon /> Table</Link>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {BrowserRouter as Router, Link, Route, Switch, useRouteMatch, useParams, useLocation} from \"react-router-dom\";\r\nimport Table from './table';\r\nimport Singleplace from './singleplace'\r\nimport PlaceDetails from './place-detail'\r\nimport UserComment from './user-comment'\r\nexport default class PlaceOperation extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            placeId : undefined,\r\n            placeLat: undefined,\r\n            placeLng:undefined,\r\n            placeName:undefined\r\n        }\r\n\r\n        this.changePlace = this.changePlace.bind(this);\r\n    }\r\n\r\n    changePlace(placeId,placeLat,placeLng,placeName)\r\n    {\r\n        this.setState({\r\n            placeId : placeId,\r\n            placeLat: placeLat,\r\n            placeLng: placeLng,\r\n            placeName: placeName\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            \r\n                <Router >\r\n                        \r\n                        <Switch>\r\n                        <Route exact path=\"/singleplaceview\">\r\n                            <Singleplace lat={this.state.placeLat} lng={this.state.placeLng} name={this.state.placeName} />\r\n                            <PlaceDetails lat={this.state.placeLat} lng={this.state.placeLng} name={this.state.placeName} locationId = {this.state.placeId} />\r\n                            <UserComment locationId = {this.state.placeId} />\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                        <Table changePlace={this.changePlace} />\r\n                        </Route>\r\n                        </Switch>\r\n                    \r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\r\nimport data from './Location_Database.json';\r\nimport Singleplace from './singleplace.jsx';\r\nimport { buildQueries } from '@testing-library/dom';\r\n\r\nmapboxgl.accessToken='pk.eyJ1IjoiMTE1NTEzODY5NCIsImEiOiJja25zajBvNGIwNmNhMnlzMXd0bjIzdnlnIn0.Ap3eCLrjBNsVTQrGNo3tMg';\r\n\r\n\r\nclass MapBox extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            lng:114.1911,\r\n            lat:22.3513,\r\n            name:'Hong Kong',\r\n            zoom: 10           \r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount(){\r\n        const map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            style: 'mapbox://styles/mapbox/streets-v11', //style URL\r\n            center:[this.state.lng, this.state.lat],\r\n            zoom:this.state.zoom\r\n        });\r\n        \r\n        // fetch(\"http://csci2720-g117.cse.cuhk.edu.hk\")\r\n        // .then(res => res.json())\r\n        // .then(data => dataset = data)\r\n        // .then(() => console.log(data))\r\n\r\n        map.on(\"load\", () => {\r\n            console.log(data);\r\n            const source = \r\n            {\r\n                type: \"geojson\",\r\n                data: {\r\n                    type: \"FeatureCollection\",\r\n                    features: []\r\n                }\r\n            }\r\n            data.forEach(loc => {\r\n                const feature = {\r\n                    type: \"Feature\",\r\n                    properties: { \r\n                        description: loc,\r\n                        'icon': 'embassy-15'\r\n                    },\r\n                    geometry: {\r\n                        type: \"Point\",\r\n                        coordinates: [loc.longitude, loc.latitude]\r\n                    }\r\n                }\r\n                source.data.features.push(feature)\r\n            })\r\n            console.log(source)\r\n            map.addSource(\"places\", source);\r\n            // Add a layer showing the places.\r\n            map.addLayer({\r\n                id: \"places\",\r\n                type: \"symbol\",\r\n                source: \"places\",\r\n                layout: {\r\n                \"icon-image\": \"{icon}\",\r\n                \"icon-size\": 2,\r\n                \r\n                \"icon-allow-overlap\": true,\r\n                },\r\n            });\r\n\r\n            // When a click event occurs on a feature in the places layer, open a popup at the\r\n            // location of the feature, with description HTML from its properties.\r\n            map.on(\"click\", \"places\", (e) => {\r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n                var description = JSON.parse(e.features[0].properties.description);\r\n\r\n                const innerHtmlContent =`<div style=\"font-size: medium; color : black; text-align:center;\">\r\n                                            <h4 class=\"h4Class\">${description.locationId}</h4>\r\n                                            <h4 class=\"h4Class\">${description.name} </h4> \r\n                                        </div>`;\r\n\r\n                const divElement = document.createElement('div');\r\n                const assignBtn = document.createElement('div');\r\n                assignBtn.innerHTML = `<button class=\"btn btn-success btn-simple text-white\" > ${description.name} </button>`;\r\n                divElement.innerHTML = innerHtmlContent;\r\n                divElement.appendChild(assignBtn);\r\n                // btn.className = 'btn';\r\n                assignBtn.addEventListener('click', (e) => {\r\n                    this.handleClick(description.name, description.latitude, description.longitude);\r\n                });\r\n                // Ensure that if the map is zoomed out such that multiple\r\n                // copies of the feature are visible, the popup appears\r\n                // over the copy being pointed to.\r\n                while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n                }\r\n\r\n                new mapboxgl.Popup().setLngLat(coordinates).setDOMContent(divElement).addTo(map);\r\n            });\r\n        });\r\n\r\n        //Source: Mapbox\r\n        const nav = new mapboxgl.NavigationControl();\r\n        map.addControl(nav, 'bottom-right');\r\n\r\n    }\r\n\r\n    handleClick(name, latitude, longitude){\r\n        console.log(name);\r\n        this.setState({lng:longitude,lat:latitude,name:name});\r\n    }\r\n\r\n\r\n    //Source: Github\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div ref={el => this.mapContainer = el} style={{width:'100%', height:'80vh'}} />\r\n                <div key={this.state.name}>\r\n                    <Singleplace lng={this.state.lng} lat={this.state.lat} name={this.state.name}/>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MapBox;","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\nimport AdminUserRetrieve from './components/admin-user-retrieve.component'\nimport AdminUserUpdate from './components/admin-user-update.component'\nimport AdminUserDelete from './components/admin-user-delete.component'\nimport AdminLocationCreate from './components/admin-location-create.component'\nimport AdminLocationRetrieve from './components/admin-location-retrieve.component'\nimport AdminLocationUpdate from './components/admin-location-update.component'\nimport AdminLocationDelete from './components/admin-location-delete.component'\nimport Chart from './components/chart.component'\nimport PlaceOperation from './components/place-operation'\nimport MapBox from './components/Map'\nimport Singleplace from './components/singleplace'\nimport PlaceDetails from './components/place-detail'\nimport UserComment from './components/user-comment'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser, showAdminBoard } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            CSCI2720 Group 5\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/map\"} className=\"nav-link\">\n                  Map\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/table\"} className=\"nav-link\">\n                  Table\n                </Link>\n              </li>\n            )}\n\n            <li className=\"nav-item\">\n              <Link to={\"/chart\"} className=\"nav-link\">\n                Chart\n                </Link>\n            </li>\n          </div>\n          \n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/\" className=\"nav-link\" onClick={this.logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route exact path=\"/admin\" component={BoardAdmin} />\n            <Route exact path=\"/admin/user/retrieve\" component={AdminUserRetrieve} />\n            <Route exact path=\"/admin/user/update\" component={AdminUserUpdate} />\n            <Route exact path=\"/admin/user/delete\" component={AdminUserDelete} />\n            <Route exact path=\"/admin/location/create\" component={AdminLocationCreate} />\n            <Route exact path=\"/admin/location/retrieve\" component={AdminLocationRetrieve} />\n            <Route exact path=\"/admin/location/update\" component={AdminLocationUpdate} />\n            <Route exact path=\"/admin/location/delete\" component={AdminLocationDelete} />\n            <Route exact path=\"/chart\" component={Chart} />\n            <Route exact path=\"/table\" component={PlaceOperation} />\n            <Route exact path=\"/map\" component={MapBox} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}