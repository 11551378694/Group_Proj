{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/table.jsx","components/board-user.component.js","components/board-admin.component.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","vusername","vpassword","Register","handleRegister","successful","register","authHeader","user","get","headers","Home","content","UserService","getPublicContent","Profile","currentUser","getCurrentUser","substring","substr","id","roles","map","index","mapboxgl","Table","places","sortkey","order","lng","lat","handleOrderChange","handleFieldChange","handleClick","fetch","res","json","placesList","event","longitude","latitude","console","log","place","locationId","href","onClick","React","Singleplace","BoardUser","getUserBoard","BoardAdmin","getAdminBoard","App","logOut","showAdminBoard","undefined","includes","logout","to","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.05af079e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    // for Node.js Express back-end\n    return { 'x-access-token': user.accessToken };\n  } else {\n    return {};\n  }\n}","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8080/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n          <h4>Journey time indicators</h4>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: AuthService.getCurrentUser()\n    };\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong>{\" \"}\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.id}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport {BrowserRouter as Router, Link, Route, Switch, useRouteMatch, useParams, useLocation} from \"react-router-dom\";//can be found in external library: ReactDOM\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibGV1bmczMDEiLCJhIjoiY2tvNnl2dHppMHJxbDJxcXdteTRvNnU3ZyJ9.HVslWQ3-PqqIw-ReK2hUsQ';\n\nexport default class Table extends React.Component{\n        constructor(props){\n                super(props);\n                this.state = {places:[],sortkey:\"locationId\",order:\"1\",lng:114.172101664 ,lat:22.279311622, location:'JTI at Gloucester Road eastbound near the Revenue Tower'};\n\t\tthis.handleOrderChange = this.handleOrderChange.bind(this);\n\t\tthis.handleFieldChange = this.handleFieldChange.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n        }\n\n        componentDidMount(){\n                fetch(\"http://csci2720-g74.cse.cuhk.edu.hk/getplaces/\"+this.state.sortkey+\"/\"+this.state.order)\n                .then(res=>res.json())\n                .then(placesList =>{\n                        this.setState({places:placesList});\n                });\n        }\n\thandleSubmit(event){\n\t\tevent.preventDefault();\n\t}\n\n\thandleFieldChange(event){\n\t\tthis.setState({sortkey:event.target.value});\n\t\tfetch(\"http://csci2720-g74.cse.cuhk.edu.hk/getplaces/\"+event.target.value+\"/\"+this.state.order)\n                .then(res=>res.json())\n                .then(placesList =>{\n                        this.setState({places:placesList});\n                });\n\t}\n\thandleOrderChange(event){\n\t\tthis.setState({order:event.target.value});\n\t\tfetch(\"http://csci2720-g74.cse.cuhk.edu.hk/getplaces/\"+this.state.sortkey+\"/\"+event.target.value)\n                .then(res=>res.json())\n                .then(placesList =>{\n                        this.setState({places:placesList});\n                });\n\t}\n\thandleClick(longitude,latitude,name){\n\t\tconsole.log(name);\n\t\tthis.setState({lng:longitude,lat:latitude,location:name});\n\t}\n\n\n\n\n        render(){\n\n\n        return(\n                <>\n                <p>This is a table</p>\n\t\t\n\t\t\t<label>\n\t\t\t\tSort the places according to:\n\t\t\t<select value={this.state.sortkey}  onChange={this.handleFieldChange}>\n\t\t\t\t<option value=\"locationId\">Location ID</option>\n\t\t\t\t<option value=\"name\">Name</option>\n\t\t\t\t<option value=\"latitude\">Latitude</option>\n\t\t\t\t<option value=\"longitude\">Longitude</option>\n\t\t\t</select>\n\t\t\t</label>\n\t\t\n\t\t\t<label>\n\t\t\tin \n\t\t\t<select value={this.state.order} onChange={this.handleOrderChange}>\n\t\t\t\t<option value=\"1\">ascending</option>\n\t\t\t\t<option value=\"-1\">descending</option>\n\t\t\t</select>\n\t\t\t\torder\n\t\t\t</label>\n\n\t\t\t\n        <table>\n          <tr>\n                <th>sort</th>\n                <th>locationID</th>\n                <th>name</th>\n                <th>latitude</th>\n                <th>longitude</th>\n          </tr>\n          {this.state.places.map((place,index) =>(\n                  <tr key={index}>\n                          <th>{index}</th>\n                          <td>{place.locationId}</td>\n                          <td><a href=\"#\" onClick={()=>this.handleClick(place.longitude,place.latitude,place.name)}>{place.name}</a></td>\n                          <td>{place.latitude}</td>\n                          <td>{place.longitude}</td>\n                </tr>\n                ))\n          }\n         </table>\n\t\t<div key={this.state.location}>\n\t\t<Singleplace lng={this.state.lng} lat={this.state.lat} name={this.state.location}/>\n\t\t</div>\n\n                </>\n                );\n        }\n}\n\n\n\nclass Singleplace extends React.Component{\n\trender(){\n\t\treturn(<></>);\n\t}\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\nimport Table from \"./table\"\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n          <Table />\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser, showAdminBoard } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            CSCI2720 Group 5\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}